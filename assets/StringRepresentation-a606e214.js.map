{"version":3,"file":"StringRepresentation-a606e214.js","sources":["../../src/components/Representation/StringRepresentation/StringViewRepresentation.tsx","../../src/components/Representation/StringRepresentation/StringEditRepresentation.tsx","../../src/components/Representation/StringRepresentation/StringRepresentation.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { ViewRepresentationProps } from \"../Representation.types\";\n\nconst StringValue = styled.span`\n`\n\n\nconst StringViewRepresentation = ({value}: ViewRepresentationProps<string>) => {\n    return (\n        <StringValue className=\"gle-string-value\">{value}</StringValue>\n    )\n}\n\nexport default StringViewRepresentation","import { ChangeEvent, Ref, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"../../Input/Input\";\nimport { EditRepresentationProps } from \"../Representation.types\";\n\nconst InputContainer = styled.span`\n  display: inline-flex;\n`\n\nconst StringEditRepresentation = ({value, onSubmit, onCancel}: EditRepresentationProps<string>) => {\n    const [inputValue, setInputValue] = useState<string>(value)\n    const inputRef = useRef<HTMLInputElement>()\n\n    useEffect(() => {\n        if (inputRef && inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [inputRef]);\n\n    const handleInputChange = (e:ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleKeyDown = (e: any) => {\n        const {key} = e;\n        const submitKeys = [ \"Enter\"]\n        if (submitKeys.indexOf(key) > -1) {\n            onSubmit(inputValue)\n        }\n\n        const cancelKeys = [\"Escape\", \"Tab\"]\n        if (cancelKeys.indexOf(key) > -1) {\n            onCancel()\n        }\n    }\n\n    return (\n        <InputContainer className=\"gle-string-input-container\">\n            <Input ref={inputRef as Ref<HTMLInputElement>}\n                   type=\"text\"\n                   className=\"gle-string-input\"\n                   variant=\"small\"\n                   value={inputValue}\n                   onKeyDown={handleKeyDown}\n                   onChange={handleInputChange}/>\n        </InputContainer>\n    )\n}\n\nexport default StringEditRepresentation","import Representation from \"../Representation\";\nimport StringViewRepresentation from \"./StringViewRepresentation\";\nimport StringEditRepresentation from \"./StringEditRepresentation\";\nimport { StringRepresentationProps } from \"./StringRepresentation.types\";\n\nconst StringRepresentation = ({value, onSubmit}: StringRepresentationProps) => {\n    return (\n        <Representation value={value}\n                        onSubmit={onSubmit}\n                        ViewRepresentation={StringViewRepresentation}\n                        EditRepresentation={StringEditRepresentation}\n        />\n    )\n}\n\nexport default StringRepresentation"],"names":["StringValue","styled","StringViewRepresentation","value","jsx","InputContainer","StringEditRepresentation","onSubmit","onCancel","inputValue","setInputValue","useState","inputRef","useRef","useEffect","Input","e","key","StringRepresentation","Representation"],"mappings":"wMAGA,MAAAA,EAAAC,EAAA;AAAA,EAIAC,EAAA,CAAA,CAAA,MAAAC,KACIC,EAAAJ,EAAA,CAAA,UAAA,mBAAA,SAAAG,CAAA,CAAA,4NCHJ,MAAAE,EAAAJ,EAAA;AAAA;AAAA,EAIAK,EAAA,CAAA,CAAA,MAAAH,EAAA,SAAAI,EAAA,SAAAC,CAAA,IAAA,CACI,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAR,CAAA,EACAS,EAAAC,EAAAA,SAEAC,OAAAA,EAAAA,UAAA,IAAA,CACIF,GAAAA,EAAA,SACIA,EAAA,QAAA,OACJ,EAAA,CAAAA,CAAA,CAAA,EAoBJR,EAAAC,EAAA,CAAA,UAAA,6BAAA,SAAAD,EAEQW,EAAC,CAAA,IAAAH,EAAW,KAAA,OACA,UAAA,mBACK,QAAA,QACF,MAAAH,EACD,UAnBtBO,GAAA,CACI,KAAA,CAAA,IAAAC,CAAA,EAAAD,EACA,CAAA,OAAA,EACA,QAAAC,CAAA,EAAA,IACIV,EAAAE,CAAA,EAGJ,CAAA,SAAA,KAAA,EACA,QAAAQ,CAAA,EAAA,IACIT,GACJ,EAUsB,SAxB1BQ,GAAA,CACIN,EAAAM,EAAA,OAAA,KAAA,CAA4B,CAwBP,CAAA,CAAA,CAAA,CAG7B,8aC1CA,MAAAE,EAAA,CAAA,CAAA,MAAAf,EAAA,SAAAI,KACIH,EACIe,EAAC,CAAA,MAAAhB,EAAe,SAAAI,EACA,mBAAAL,EACoB,mBAAAI,CACA,CAAA"}