{"version":3,"file":"BooleanRepresentation-d44779fb.js","sources":["../../src/components/Representation/BooleanRepresentation/BooleanViewRepresentation.tsx","../../src/components/Representation/BooleanRepresentation/BooleanEditRepresentation.tsx","../../src/components/Representation/BooleanRepresentation/BooleanRepresentation.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { ViewRepresentationProps } from \"../Representation.types\";\n\nconst BooleanValue = styled.span`\n`\n\nconst BooleanViewRepresentation = ({value}: ViewRepresentationProps<boolean>) => {\n    return (\n        <BooleanValue className=\"gle-boolean-value\">{value.toString()}</BooleanValue>\n    )\n}\n\nexport default BooleanViewRepresentation","import { ChangeEvent, Ref, useEffect, useRef, useState } from \"react\";\nimport Input from \"../../Input/Input\";\nimport styled from \"styled-components\";\nimport { EditRepresentationProps } from \"../Representation.types\";\n\nconst InputContainer = styled.span`\n  display: inline-flex;\n`\n\nconst RadioLabel = styled.label`\n  flex: 1 0 auto;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst BooleanEditRepresentation = ({value, onSubmit, onCancel}: EditRepresentationProps<boolean>) => {\n    const [inputValue, setInputValue] = useState<boolean>(value)\n    const inputRef = useRef<HTMLInputElement>()\n\n    useEffect(() => {\n        if (inputRef && inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [inputRef]);\n\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const booleanValue = e.target.value === 'true'\n        setInputValue(booleanValue)\n        onSubmit(booleanValue)\n    }\n\n    const handleKeyDown = (e: any) => {\n        const {key} = e;\n        const submitKeys = [ \"Enter\"]\n        if (submitKeys.indexOf(key) > -1) {\n            onSubmit(inputValue)\n        }\n\n        const cancelKeys = [\"Escape\", \"Tab\"]\n        if (cancelKeys.indexOf(key) > -1) {\n            onCancel()\n        }\n    }\n\n    const handleClick = (e: any) => {\n        e.stopPropagation();\n    }\n\n    return (\n        <InputContainer className=\"gle-input-container gle-boolean-input-conatiner\" onClick={handleClick}>\n            <RadioLabel className=\"gle-boolean-label radio\">\n                true\n                <Input name=\"boolean\"\n                       type=\"radio\"\n                       className=\"gle-boolean-input\"\n                       variant=\"small\"\n                       value=\"true\"\n                       checked={inputValue}\n                       onKeyDown={handleKeyDown}\n                       onChange={handleInputChange}/>\n            </RadioLabel>\n            <RadioLabel className=\"gle-boolean-label radio\">\n                false\n                <Input name=\"boolean\"\n                       type=\"radio\"\n                       className=\"gle-boolean-input\"\n                       variant=\"small\"\n                       value=\"false\"\n                       checked={!inputValue}\n                       onKeyDown={handleKeyDown}\n                       onChange={handleInputChange}/>\n            </RadioLabel>\n        </InputContainer>\n    )\n}\n\nexport default BooleanEditRepresentation","import Representation from \"../Representation\";\nimport BooleanViewRepresentation from \"./BooleanViewRepresentation\";\nimport BooleanEditRepresentation from \"./BooleanEditRepresentation\";\nimport { BooleanRepresentationProps } from \"./BooleanRepresentation.types\";\n\nconst BooleanRepresentation = ({value, onSubmit}: BooleanRepresentationProps) => {\n    return (\n        <Representation value={value}\n                        onSubmit={onSubmit}\n                        ViewRepresentation={BooleanViewRepresentation}\n                        EditRepresentation={BooleanEditRepresentation}\n        />\n    )\n}\n\nexport default BooleanRepresentation"],"names":["BooleanValue","styled","BooleanViewRepresentation","value","jsx","InputContainer","RadioLabel","BooleanEditRepresentation","onSubmit","onCancel","inputValue","setInputValue","useState","inputRef","useRef","useEffect","handleInputChange","e","booleanValue","handleKeyDown","key","jsxs","Input","BooleanRepresentation","Representation"],"mappings":"+MAGA,MAAAA,EAAAC,EAAA;AAAA,EAGAC,EAAA,CAAA,CAAA,MAAAC,KACIC,EAAAJ,EAAA,CAAA,UAAA,oBAAA,SAAAG,EAAA,SAAA,CAAA,CAAA,+NCFJ,MAAAE,EAAAJ,EAAA;AAAA;AAAA,EAIAK,EAAAL,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOAM,EAAA,CAAA,CAAA,MAAAJ,EAAA,SAAAK,EAAA,SAAAC,CAAA,IAAA,CACI,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAT,CAAA,EACAU,EAAAC,EAAAA,SAEAC,EAAAA,UAAA,IAAA,CACIF,GAAAA,EAAA,SACIA,EAAA,QAAA,OACJ,EAAA,CAAAA,CAAA,CAAA,EAGJ,MAAAG,EAAAC,GAAA,CACI,MAAAC,EAAAD,EAAA,OAAA,QAAA,OACAN,EAAAO,CAAA,EACAV,EAAAU,CAAA,CAAqB,EAGzBC,EAAAF,GAAA,CACI,KAAA,CAAA,IAAAG,CAAA,EAAAH,EACA,CAAA,OAAA,EACA,QAAAG,CAAA,EAAA,IACIZ,EAAAE,CAAA,EAGJ,CAAA,SAAA,KAAA,EACA,QAAAU,CAAA,EAAA,IACIX,GACJ,EAOJ,OAAAY,EAAAhB,EAAA,CAAA,UAAA,kDAAA,QAJAY,GAAA,CACIA,EAAA,gBAAA,CAAkB,EAGtB,SAAA,CAEQI,EAAAf,EAAA,CAAA,UAAA,0BAAA,SAAA,CAAgD,OAAAF,EAE5CkB,EAAC,CAAA,KAAA,UAAW,KAAA,QACA,UAAA,oBACK,QAAA,QACF,MAAA,OACF,QAAAZ,EACG,UAAAS,EACE,SAAAH,CACD,CAAA,CAAkB,EAAA,EACvCK,EAAAf,EAAA,CAAA,UAAA,0BAAA,SAAA,CACgD,QAAAF,EAE5CkB,EAAC,CAAA,KAAA,UAAW,KAAA,QACA,UAAA,oBACK,QAAA,QACF,MAAA,QACF,QAAA,CAAAZ,EACI,UAAAS,EACC,SAAAH,CACD,CAAA,CAAkB,EAAA,CACvC,CAAA,CAAA,CAGZ,kbCtEA,MAAAO,EAAA,CAAA,CAAA,MAAApB,EAAA,SAAAK,KACIJ,EACIoB,EAAC,CAAA,MAAArB,EAAe,SAAAK,EACA,mBAAAN,EACoB,mBAAAK,CACA,CAAA"}