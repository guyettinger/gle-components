{"version":3,"file":"Button-afacee23.js","sources":["../../src/components/Button/Button.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { ButtonProps } from \"./Button.types\";\n\nconst StyledButton = styled.button<{\n    $primary?: boolean,\n    $variant?: string,\n    disabled?: boolean\n}>`\n  border: 0;\n  line-height: 1;\n  font-size: ${(props) =>\n          props.$variant === \"small\"\n                  ? \"12px\"\n                  : props.$variant === \"medium\"\n                          ? \"14x\"\n                          : \"15px\"};\n  cursor: pointer;\n  font-weight: bold;\n  border-radius: 3px;\n  display: inline-block;\n  padding: ${(props) =>\n          props.$variant === \"small\"\n                  ? \"5px 20px 5px\"\n                  : props.$variant === \"medium\"\n                          ? \"7px 25px 8px\"\n                          : \"9px 30px 11px\"};\n  color: ${(props) => (props.$primary ? props.theme.gle.color.buttonPrimaryForeground : props.theme.gle.color.buttonForeground)};\n  background: ${(props) => (props.$primary ? props.theme.gle.color.buttonPrimaryBackground : props.theme.gle.color.buttonBackground)};\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n\n  &:hover {\n    background-color: ${(props) => (props.$primary ? props.theme.gle.color.buttonPrimaryBackgroundHover : props.theme.gle.color.buttonBackgroundHover)};\n  }\n\n  &:active {\n    border: solid 2px ${(props) => (props.$primary ? props.theme.gle.color.buttonPrimaryActiveBorderColor : props.theme.gle.color.buttonActiveBorderColor)};\n    padding: ${(props) =>\n            props.$variant === \"small\"\n                    ? \"3px 18px 3px\"\n                    : props.$variant === \"medium\"\n                            ? \"5px 23px 6px\"\n                            : \"7px 28px 9px\"};\n  }\n`\n\nexport const Button =\n    forwardRef<HTMLButtonElement, ButtonProps>((\n        {\n            variant,\n            primary,\n            disabled,\n            onClick,\n            children,\n            ...props\n        }: ButtonProps, ref) => {\n        return (\n            <StyledButton\n                ref={ref}\n                type=\"button\"\n                onClick={onClick}\n                disabled={disabled}\n                $primary={primary}\n                $variant={variant}\n                {...props}>\n                {children}\n            </StyledButton>\n        )\n    })"],"names":["StyledButton","styled","props","Button","forwardRef","variant","primary","disabled","onClick","children","ref","jsx"],"mappings":"+GAIA,MAAAA,EAAAC,EAAA;AAAA;AAAA;AAAA,eAA4BC,GAAAA,EAAA,WAAA,QAAA,OAAAA,EAAA,WAAA,SAAA,MAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAYMA,GAAAA,EAAA,WAAA,QAAA,eAAAA,EAAA,WAAA,SAAA,eAAA,eAAA;AAAA,WAUSA,GAAAA,EAAA,SAAAA,EAAA,MAAA,IAAA,MAAA,wBAAAA,EAAA,MAAA,IAAA,MAAA,gBAAA;AAAA,gBACoFA,GAAAA,EAAA,SAAAA,EAAA,MAAA,IAAA,MAAA,wBAAAA,EAAA,MAAA,IAAA,MAAA,gBAAA;AAAA,aACKA,GAAAA,EAAA,SAAA,GAAA,CAAA;AAAA;AAAA;AAAA,wBAClFA,GAAAA,EAAA,SAAAA,EAAA,MAAA,IAAA,MAAA,6BAAAA,EAAA,MAAA,IAAA,MAAA,qBAAA;AAAA;AAAA;AAAA;AAAA,wBAGoGA,GAAAA,EAAA,SAAAA,EAAA,MAAA,IAAA,MAAA,+BAAAA,EAAA,MAAA,IAAA,MAAA,uBAAA;AAAA,eAIIA,GAAAA,EAAA,WAAA,QAAA,eAAAA,EAAA,WAAA,SAAA,eAAA,cAAA;AAAA;AAAA,EAUnJC,EAAAC,EAAA,WAAA,CAAA,CAEC,QAAAC,EACI,QAAAC,EACA,SAAAC,EACA,QAAAC,EACA,SAAAC,EACA,GAAAP,CAEJ,EAAAQ,IACAC,EACIX,EAAC,CAAA,IAAAU,EACG,KAAA,SACK,QAAAF,EACL,SAAAD,EACA,SAAAD,EACU,SAAAD,EACA,GAAAH,EACN,SAAAO,CACH,CAAA,CAGb"}